# 1. Напишите программу, которая принимает на вход
# вещественное число и показывает сумму его цифр.
# Без работы с методами строк.
# in -> out
# - 6782 -> 23
# - 0.67 -> 13
# - 198.45 -> 27

# Мой вариант:
# num = input()
# sum = 0
# m = len(num) - 2
# num = float(num)
# num *= (10 ** m)

# print(int(num))

# while num > 0:
#     digit = num % 10
#     sum = sum + digit
#     num = num // 10
# print(sum)

#Вариант учителя:
    
#print(sum(map(int, list(input('Введите дробное число: ').replace(".", "")))))    
    
# 3. Задайте список из n чисел, заполненный по формуле (1 + 1/n) ** n и выведите
# на экран их сумму.
# in
# 6

# out
# [2.0, 2.25, 2.37, 2.441, 2.488, 2.522]
# 14.071
# num_list = []
# n = int (input ('Введите длину списка '))
# for k in range (1, n+1):
#     num_list.append ((1 + 1 / k) ** k)
# my_formatted_list = [ '%.3f' % elem for elem in num_list ]
# print (my_formatted_list)
# print (round((sum(num_list)) , 3))
    
#ОТвет учителя:
# num = int(input())
# sum_nums = 0
# list_nums = []

# for i in range(1, num + 1):
#     result = round((1 + 1 / i) ** i, 3)
#     list_nums.append(result)
#     sum_nums += result
    
# print(list_nums)
# print(sum_nums)    

# 4. Напишите программу, которая принимает на вход 2 числа.
# Получите значение N, для пустого списка, заполните числами в диапзоне [-N, N].
# Найдите произведение элементов на указанных позициях(не индексах).
# Enter the value of N: 5
# Position one: 1
# Position two: 2
# -> [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]
# -> 20

# Enter the value of N: 4
# Position one: 20
# Position two: 22
# -> [-4, -3, -2, -1, 0, 1, 2, 3, 4]
# -> There are no values for these indexes!

#Ответ учителя
# num = int(input('Enter the value of N: '))
# n_1 = int(input('Position one: '))
# n_2 = int(input('Position two: '))

# nums_list = list(range(-num, num + 1))

# print(nums_list)
# len_list = len(nums_list)

# if len_list >= n_1 > 0 and len_list >= n_2 > 0:
#     print(nums_list[n_1 - 1] * nums_list[n_2 - 1])
# else:
#     print('There are no values for these indexes!')

# 5. Реализуйте алгоритм перемешивания списка.
# Без функции shuffle из модуля random.
# 10
# -> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
# -> [0, 7, 6, 3, 4, 2, 9, 5, 1, 8]

# from random import randrange

# num = int(input())
# nums_list = list(range(num))
# res_list = []

# print (nums_list)

# for i in range(num):
#     n_1, n_2 = randrange(num), randrange(num)
#     nums_list[n_1], nums_list[n_2] = nums_list[n_2], nums_list[n_1]
    
# print(nums_list)