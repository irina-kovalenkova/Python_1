# Concatenatio склеивает все данные, выдает слитно

# def concatenatio(*params):
#     res: str = ''
#     for item in params:
#         res += item
#     return res

# print(concatenatio('a', 'b', 'd'))        # abd
# print(concatenatio('a', '1'))           # a1
#print(concatenatio(1, 2, 3,))      #ошибка, т.к. мы задали str (для чисел - указание типа не обязательно)

#______________________________________________________________________________________
#=========================  Кортежи  =======================================================
#Неизменяемый список

# a = (3, 4)
# print(a)
# print(a[-1])    #можем обращаться к конкретному элементу кортежа (по индексу)

#__________________________________________________________________

# t = tuple(['red', 'green', 'blue'])
# print(t[0])                 # red
# print(t[2])                # blue
# print(t[-2])               # green

# for e in t:
#     print(e)      # red green blue
    
#____________________________________________________________________

# a = (3, 4, 5)
# for item in a:                     #напечатает в столбик
#     print(item)       
    
#______________________________________________________________________
#Можно распаковать кортеж в отдельные переменные  
# t = tuple(['red', 'green', 'blue'])    #(создаем список, конвертируем его в кортеж,
# red, green, blue = t                    #далее распаковываем его и превращаем в три независимые переменные)
# print('r:{} g:{} b:{}'.format(red, green, blue))            #r:red g:green b:blue

#___________________________________________________________________________
#==============================  Словари  =========================================

# Неупорядоченные коллекции произвольных объектов с доступом по ключу

# dictionary = {}
# dictionary = \
#     {
#         'up': '↑',
#         'left': '←',
#         'down': '↓',
#         'right': '→'
#     }
    
# print(dictionary)          # {'up': '↑', 'left': '←', 'down': '↓', 'right': '→'}
# print(dictionary['left'])     # ←

# for k in dictionary.keys():          # можем получить все ключи 
#     print(k)
    
    
# for k in dictionary.values():          # можем получить все значения 
#     print(k)
    
# for v in dictionary:
#     print(dictionary[v])                  # можем получить все значения 

#_______________________________________________________________________________
# Переписываем значение в словаре

# dictionary['up'] = 'up'
# print(dictionary['up'])

#_______________________________________________________________________________
#==============================  Множества  =========================================

# colors = {'red', 'green', 'blue'}
# print(colors)         # {'green', 'red', 'blue'}

# colors.add('grey')         # добавление элемента в множество

# colors.remove('red')          # удаляем из множества red (если эл-та уже нет, выдает ошибку)
# print(colors)                 # {'grey', 'green', 'blue'}

# colors.discard('red')       # удаляет элемент, если его нет, выводит как есть
# print(colors)

# colors.clear()     # очищает множество (удаляет все элементы)
# print(colors)

#_____________________________________________________________________________________

# a = {1, 2, 3, 5, 8}
# b = {2, 5, 8, 13, 21}
# c = a.copy()     #{1, 2, 3, 5, 8}  создаем множество на основе другого 

# u = a.union(b)    # {1, 2, 3, 5, 8, 13, 21}    объединение множеств
     
# i = a. intersection(b)    # {8, 2, 5}  пересечение множеств

# dl = a.difference(b)  # {1, 3} разница то, что есть в а, но нет в b (лево)

# dr = b.difference(a)  # {13, 21} разница то, что есть в b, но нет в а (право)
# print(dr)

# q = a\
#     .union(b) \
#     .difference(a.intersection(b))
# print(q)       # {1, 21, 3, 13}

# s = frozenset(a)   # замороженое множество, никакие методы работать не будут

#__________________________________________________________________________________________
#===========================  Списки  ==================================================

# list1 = [1,2,3,4]          
# list2 = list1            # второму списку присваиваем значения первого

# list1[0] = 123       # при изменении значения одного списка, меняется и другой список
# list2[1] = 333       # и наоборот

# for e in list1:
#     print(e)

# print()

# for e in list2:
#     print(e)
#_______________________________________________________________________

# list1 = [1, 2, 3, 4, 5]

# print(len(list1))          # 5 длина списка
# print(list1.pop())         # убирает последний элемент из списка
# print(list1)

# print(list1.pop(2))         # убирает 2 по индексу элемент из списка
# print(list1)

# print(list1.insert(2, 11))         # ставит вместо 2 по индексу 11
# print(list1) 

# print(list1.append(11))         # добавление в конец списка
# print(list1) 